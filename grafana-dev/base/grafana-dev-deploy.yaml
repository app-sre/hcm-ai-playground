apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: multicluster-observability-grafana-dev
    observability.open-cluster-management.io/name: observability
  name: grafana-dev
  namespace: open-cluster-management-observability
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: multicluster-observability-grafana-dev
      observability.open-cluster-management.io/name: observability
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: multicluster-observability-grafana-dev
        observability.open-cluster-management.io/name: observability
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - multicluster-observability-grafana-dev
              topologyKey: topology.kubernetes.io/zone
            weight: 70
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - multicluster-observability-grafana-dev
              topologyKey: kubernetes.io/hostname
            weight: 30
      containers:
      - args:
        - -config=/etc/grafana/grafana.ini
        env:
        - name: SQLITE_TMPDIR
          value: /var/lib/grafana
        image: registry.redhat.io/rhacm2/acm-grafana-rhel9@sha256:a6ba4c36a1332cf54f0a7a7dc95a752f6d1db44da36042812cc59e8187a92433
        imagePullPolicy: Always
        name: grafana-dev
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 4m
            memory: 100Mi
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
        - mountPath: /etc/grafana
          name: grafana-dev-config
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: registry.redhat.io/rhacm2/grafana-dashboard-loader-rhel9@sha256:cf1a7b71daa4b5d5bd2f372763d12ce834e74e33256832c4401478a25e034a71
        imagePullPolicy: Always
        name: grafana-dashboard-loader
        resources:
          requests:
            cpu: 4m
            memory: 50Mi
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --provider=openshift
        - --upstream=http://localhost:3001
        - --https-address=:9443
        - --cookie-secret-file=/etc/proxy/secrets/session_secret
        - --cookie-expire=12h0m0s
        - --cookie-refresh=8h0m0s
        - '--openshift-delegate-urls={"/": {"resource": "projects", "verb": "list"}}'
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --openshift-service-account=grafana
        - --pass-user-bearer-token=true
        - --pass-access-token=true
        - --client-id=grafana-proxy-client-dev
        - --client-secret=grafana-proxy-client-dev
        - --scope=user:full
        - --openshift-ca=/etc/pki/tls/cert.pem
        - --openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a734484fc6c94848b4464077bb3a67896c41fb9c1cd32724601cf1c2fbd46088
        imagePullPolicy: Always
        name: grafana-proxy
        ports:
        - containerPort: 9443
          name: public
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: 9443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/tls/private
          name: tls-secret
        - mountPath: /etc/proxy/secrets
          name: cookie-secret
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: multiclusterhub-operator-pull-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {fsGroup: 1001100000}
      serviceAccount: grafana-dev
      serviceAccountName: grafana-dev
      terminationGracePeriodSeconds: 30
      volumes:
      - persistentVolumeClaim:
          claimName: grafana-dev
        name: grafana-storage
      - name: grafana-datasources
        secret:
          defaultMode: 420
          secretName: grafana-datasources
      - name: grafana-dev-config
        secret:
          defaultMode: 420
          secretName: grafana-dev-config
      - name: tls-secret
        secret:
          defaultMode: 420
          secretName: grafana-tls-dev
      - name: cookie-secret
        secret:
          defaultMode: 420
          secretName: rbac-proxy-cookie-secret
